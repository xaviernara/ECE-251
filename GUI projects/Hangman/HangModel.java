import java.awt.event.*;
import java.awt.*;
import javax.swing.*;
import java.util.*;
import javax.swing.plaf.basic.BasicArrowButton;
import java.io.*;
import sun.audio.*;

public class HangModel extends JFrame {

	private static ArrayList<String> DictionaryList = new ArrayList<String>();
	private String wordHolder="";
	private StringBuilder guessedLetters= new StringBuilder();
//	private char unguessedLetters;
	private int remainingGuesses=6;
	private String currentStateOfWord="";

	JPanel     preview ,slides;
	JLabel 	 	example;
    CardLayout  layoutManager;
    JTextField guessField, wordField;

//get methods for the private instance variables
	public String getWordHolder(){
		return wordHolder;
	}
	public StringBuilder getGuessedLetters( ){
		return guessedLetters;
	}

	public int getRemainingGuesses( ){
		return remainingGuesses;
	}

	public String getCurrentStateOfWord( ){
		return currentStateOfWord;
	}

//set methods for the private instance variables

	 public void setWordHolder( String aWordHolder ){
		wordHolder=aWordHolder;
	}
	public void addGuessedLetters( String aGuessedLetters ){
		guessedLetters.append(aGuessedLetters);
	}

	public void setRemainingGuesses( int aRemainingGuesses ){
		remainingGuesses=aRemainingGuesses;
	}

	public void setCurrentStateOfWord( String aCurrentStateOfWord ){
		currentStateOfWord=aCurrentStateOfWord;
	}
//this method is for getting the words from the dictionary reader (i.e dictionary list)
	public static void addDictionaryList(String DictionaryWord){
		DictionaryList.add(DictionaryWord);
		//System.out.println("this is the word: "+ DictionaryWord);
	}
	public static int sizeDictionaryList(){

		return DictionaryList.size();
	}

//This function is for finding the random word in the dictionary list that'll be used in the GUI
	public String RandomWords(){
	//the random object was created so that the nextInt() method could be used
		Random randObj=new Random();
		String dashed_randomWord = "";
	//index_of_random_word is for finding the index of the random word(int) thats generated by the nextInt() method
		int index_of_random_word=randObj.nextInt(DictionaryList.size());
	//now after finding the index of the random word were setting the index of the random word equal to wordHolder to hold the singualr random word whose index we found above
		setWordHolder(DictionaryList.get(index_of_random_word));
	//test to see what the random word is
		//System.out.println("this is the random word: " + wordHolder);

		for (int i=0; i<wordHolder.length();i++){
			dashed_randomWord=dashed_randomWord+'-';

		}
			//System.out.println("this is the dashed word: " +dashed_randomWord);
			setCurrentStateOfWord(dashed_randomWord);

		return wordHolder;
	}

//this method will be called to decrement the remaining guesses everytime a incorrect guess is guessed by the user
	public void DecrementRemainingGuesses(){

		if (remainingGuesses>0){
			 remainingGuesses=remainingGuesses-1;
			 System.out.println("this is your remaining guesses:" +remainingGuesses);
		}

	}
	public boolean UserGuess(char aUserGuess ){
		String string_aUserGuess= String.valueOf(aUserGuess);

		if (wordHolder.contains(string_aUserGuess)){
			System.out.println("You guessed a right letter!");
			addGuessedLetters(string_aUserGuess);
			System.out.println("this is whats being sent to word changer:" +string_aUserGuess);
			Current_State_Of_Word_Changer(aUserGuess);
			return true;
		}
		else{
			System.out.println("You guessed a wrong letter!");
			DecrementRemainingGuesses();
			return false;
		}
	}

	private void Current_State_Of_Word_Changer(char aCorrectGuess){
		int wordIndex=wordHolder.indexOf(aCorrectGuess,0);
		if (wordIndex >=0 ){
			StringBuilder sbObj = new StringBuilder(getCurrentStateOfWord());
			sbObj.setCharAt(wordIndex, aCorrectGuess);
			setCurrentStateOfWord(sbObj.toString());
				while (wordIndex!= -1 && wordIndex+1 < wordHolder.length()){
					wordIndex=wordHolder.indexOf(aCorrectGuess,wordIndex+1);
					System.out.println("this is the word index:"+wordIndex);
					if (wordIndex >=0 ){
						sbObj = new StringBuilder(getCurrentStateOfWord());
						sbObj.setCharAt(wordIndex, aCorrectGuess);
						setCurrentStateOfWord(sbObj.toString());
						System.out.println("this is the current word:"+getCurrentStateOfWord());
					}
				}
		}
	}
    public HangModel() {
    	 super("Hangman");

		setLayout(new FlowLayout());

		GridBagLayout layout = new GridBagLayout();
        GridBagConstraints constraints = new GridBagConstraints();
        setLayout(layout);

		//JOptionPane.showMessageDialog(null, "Welcome to Hangman",JOptionPane.WARNING_MESSAGE);
	// Add the value text field, along with a label
        add(new JLabel("Guessed letter:"));
        guessField = new JTextField(8);
        setFont(new Font("courier", Font.BOLD, 32));
        constraints.gridx = 0;
        constraints.gridy = 0;
        constraints.gridwidth = 1;
        constraints.gridheight = 1;
        constraints.fill = GridBagConstraints.BOTH;
        constraints.insets = new Insets(12, 12, 3, 3);
        constraints.weightx = 10;
        constraints.weighty = 0;
        layout.setConstraints(guessField, constraints);
        add(guessField);

        add(new JLabel("WORD"));
       	wordField=new JTextField(getCurrentStateOfWord(),10);
       	wordField.setEditable(false);
       	setFont(new Font("courier", Font.BOLD, 32));
       	constraints.gridx = 0;
        constraints.gridy = 0;
        constraints.gridwidth = 1;
        constraints.gridheight = 1;
        constraints.fill= GridBagConstraints.NONE;
        //constraints.fill = GridBagConstraints.BOTH;
        constraints.insets = new Insets(12, 12, 3, 3);
        constraints.weightx = 10;
        constraints.weighty = 0;
        layout.setConstraints(wordField, constraints);
        add(wordField);

        slides = new JPanel();
        slides.setBackground(Color.YELLOW);
        slides.setBorder(BorderFactory.createLineBorder(Color.RED));
        slides.setLayout(layoutManager = new CardLayout(0,0));
        slides.add("HANG1.gif", new JLabel(new ImageIcon("HANG1.gif")));
        slides.add("HANG2.gif", new JLabel(new ImageIcon("HANG2.gif")));
        slides.add("HANG3.gif", new JLabel(new ImageIcon("HANG3.gif")));
        slides.add("HANG4.gif", new JLabel(new ImageIcon("HANG4.gif")));
        slides.add("HANG5.gif", new JLabel(new ImageIcon("HANG5.gif")));
        slides.add("HANG6.gif", new JLabel(new ImageIcon("HANG6.gif")));
        slides.add("HANG7.gif", new JLabel(new ImageIcon("HANG7.gif")));
        //slides.add("HANG8.gif", new JLabel(new ImageIcon("HANG8.gif")));
        add(slides);

     JButton Guess_button = new JButton("Guess");
      constraints.gridx = 1;
      constraints.gridy = 0;
      constraints.gridwidth = 1;
      constraints.gridheight = 1;
      constraints.fill = GridBagConstraints.HORIZONTAL;
      constraints.insets = new Insets(12, 3, 3, 12);
      constraints.anchor = GridBagConstraints.NORTHWEST;
      constraints.weightx = 0;
      constraints.weighty = 0;
      layout.setConstraints(Guess_button, constraints);
     setLayout(new FlowLayout());
     add(Guess_button);

	Guess_button.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
        //	char letter = guessField.getText().charAt(0);
        	String s_letter= guessField.getText();
        	char letter=s_letter.charAt(0);
        	System.out.println(guessField.getText());
        	//System.out.println(letter);
      	if (letter == ' '){
        		System.exit(0);
        	}
        	if (UserGuess(letter)==true)
        	{
        		wordField.setText(currentStateOfWord);
        	}
        	else
        	{
        		layoutManager.next(slides);
        	}
			if (remainingGuesses==0){
			//	preview = new JPanel();
       			//preview.setBackground(Color.ORANGE);
        		//preview.add("HANG8.gif", new JLabel(new ImageIcon("HANG8.gif")));
        		//add(preview);

        		//dispose();
        	    JOptionPane.showMessageDialog(null, "YOU LOST", "LOSER", JOptionPane.ERROR_MESSAGE);

        	    //new HangModel();
        	}
        	//JOptionPane.showMessageDialog(null, "THANKS FOR PLAYING", "END", JOptionPane.ERROR_MESSAGE);
        }
     });

     JButton reset_button = new JButton("RESET");
      constraints.gridx = 1;
      constraints.gridy = 0;
      constraints.gridwidth = 1;
      constraints.gridheight = 1;
      constraints.fill = GridBagConstraints.HORIZONTAL;
      constraints.insets = new Insets(12, 3, 3, 12);
      constraints.anchor = GridBagConstraints.NORTHWEST;
      constraints.weightx = 0;
      constraints.weighty = 0;
      layout.setConstraints(reset_button, constraints);
     setLayout(new FlowLayout());
     add(reset_button);

    /* reset_button.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				wordField.setText("");
				HangModel redo = new HangModel();
				//.setIcon(new ImageIcon("HANG2.gif"));
				//h.resetHangmanState();
				wordField.setText(redo.getCurrentStateOfWord());
				update();
				reset_button.setVisible(false);
				remove();
			}
		});*/


     	reset_button.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
        		dispose();
        		HangModel redo = new HangModel();
        		redo.setVisible(true);
        	    JOptionPane.showMessageDialog(null, "THANKS FOR PLAYING", "END", JOptionPane.ERROR_MESSAGE);
        	}
        } );

     	//JOptionPane.showMessageDialog(null, "Sorry you lost",JOptionPane.ERROR_MESSAGE);
     	String string= "Welcome to Hangman";
     	JOptionPane.showMessageDialog(null, string, "INTRO", JOptionPane.PLAIN_MESSAGE);

     	//setDefaultCloseOperation(EXIT_ON_CLOSE);
     	setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    	setSize(500,500);
    }




}